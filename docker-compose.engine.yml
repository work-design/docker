version: '3'
services:
  web:
    image: ${WEB_IMAGE}
    container_name: ${PROJECT}_web
    restart: always
    build:
      context: ..
      dockerfile: docker/engine/Dockerfile
    ports:
      - ${WEB_PORT-3000}:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - .persistence/.env.production:/app/.env.production
      - .persistence/logs:/app/logs
    environment:
      RAILS_ENV: ${RAILS_ENV-development}
      REDIS_URL: ${REDIS_URL}
      DATABASE_ADAPTER: ${DATABASE_ADAPTER}
      DATABASE_URL: ${DATABASE_URL}
      SKIP_TEST_DATABASE: 'true'
  sidekiq:
    image: ${WEB_IMAGE}
    container_name: ${PROJECT}_sidekiq
    restart: always
    depends_on:
      - web
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_URL: ${REDIS_URL}
      REDIS_PROVIDER: REDIS_URL
    entrypoint: bundle exec sidekiq -v -r test/dummy

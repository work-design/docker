version: '3'
services:
  web:
    image: ${WEB_IMAGE}
    container_name: ${PROJECT}_web
    restart: always
    build:
      context: ..
      dockerfile: docker/${TYPE}/Dockerfile
    ports:
    - ${WEB_PORT}:3000
    depends_on:
    - postgres
    - redis
    volumes:
    - log:/app/log
    - well_know:/app/public/.well-known
    - acme:/app/acme
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_URL: ${REDIS_URL}
      DATABASE_ADAPTER: ${DATABASE_ADAPTER}
      DATABASE_URL: ${DATABASE_URL}
      SKIP_TEST_DATABASE: 'true'
  sidekiq:
    image: ${WEB_IMAGE}
    container_name: ${PROJECT}_sidekiq
    restart: 'no'
    depends_on:
    - web
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_URL: ${REDIS_URL}
      REDIS_PROVIDER: REDIS_URL
    entrypoint: bundle exec sidekiq -v
networks:
  dockernet:
    external: true
volumes:
  well_know:
  log:
  acme:

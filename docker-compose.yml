version: '3'
services:
  web:
    image: ${WEB_IMAGE-app}
    container_name: ${PROJECT}_web
    restart: always
    build:
      context: ..
      dockerfile: docker/${TYPE}/Dockerfile
    ports:
    - ${WEB_PORT-3000}:3000
    depends_on:
    - postgres
    - redis
    networks:
      rails:
    volumes:
    - log:/app/log
    - challenge:/app/public/challenge
    - acme:/app/acme
    environment:
      RAILS_ENV: ${RAILS_ENV-development}
      REDIS_URL: ${REDIS_URL-redis://redis:6379}
      DATABASE_ADAPTER: ${DATABASE_ADAPTER-postgresql}
      DATABASE_URL: ${DATABASE_URL-postgres://postgres:postgres@postgres/dummy_development}
      SKIP_TEST_DATABASE: 'true'
  job:
    image: ${WEB_IMAGE-app}
    container_name: ${PROJECT}_job
    restart: 'no'
    build:
      context: ..
      dockerfile: docker/${TYPE}/Dockerfile
    depends_on:
    - web
    networks:
      rails:
    environment:
      RAILS_ENV: ${RAILS_ENV-development}
      REDIS_URL: ${REDIS_URL-redis://redis:6379}
      REDIS_PROVIDER: REDIS_URL
      DATABASE_ADAPTER: ${DATABASE_ADAPTER-postgresql}
      DATABASE_URL: ${DATABASE_URL-postgres://postgres:postgres@postgres/dummy_development}
    entrypoint: bundle exec good_job start
networks:
  rails:
volumes:
  challenge:
  log:
  acme:
